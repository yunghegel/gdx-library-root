buildscript {
    repositories {
        mavenCentral()
        maven {
            name "yunghegelRepository"
            url "https://repo.yunghegel.org/plugins"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        gradlePluginPortal()

    }
    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:6.5.0.3"
    }
}
plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'

}
group 'org.yunghegel.gdx'


subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    sourceCompatibility = 11 //DESIRED JAVA VERSION;
    targetCompatibility = 11 //DESIRED JAVA VERSION;

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven{ url "https://raw.githubusercontent.com/kotlin-graphics/mary/master"}
        maven {
            name "yunghegelRepository"
            url "https://repo.yunghegel.org/snapshots"
        }
        maven {
            name "yunghegelRepository"
            url "https://repo.yunghegel.org/plugins"
        }


    }


    dependencies {

        testImplementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"


        api "com.kotcrab.vis:vis-ui:$visUiVersion"
        api "com.github.mgsx-dev.gdx-gltf:gltf:$gdxGltfVersion"
        api 'com.github.raeleus.stripe:stripe:1.4.5'
        api 'com.esotericsoftware.minlog:minlog:1.2'
        api "com.github.crykn.guacamole:core:$guacamoleVersion"
        api "com.github.crykn.guacamole:gdx:$guacamoleVersion"
        api "com.github.crykn.guacamole:gdx-desktop:$guacamoleVersion"
        api "com.github.tommyettinger:libgdx-utils:$utilsVersion"
        api 'com.github.raeleus.stripe:freetype:1.4.5'
        api "com.github.tommyettinger:libgdx-utils:$utilsVersion"
        api "org.apache.commons:commons-lang3:3.12.0"

    }


}

def javaProjects() {
    subprojects.findAll { project ->
        project.plugins.hasPlugin('java-library')
    }
}

def apps() {
    subprojects.findAll { project ->
        project.plugins.hasPlugin('application')
    }
}

configure(apps()){
    dependencies {
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

    }
}

def libs() {
    subprojects.findAll { project ->
        project.name != 'salient_editor'
    }
}

configure(javaProjects()) {

    sourceSets {
        main {
            java {
                srcDirs = ['src']
            }
            resources {
                srcDirs = ['res']
            }
        }
        test {
            java {
                srcDirs = ['test']
            }
        }
    }

    java {
        withSourcesJar()
        //withJavadocJar()
    }

    artifacts {
        archives jar
        archives sourcesJar
        //archives javadocJar
    }

    jar {
        manifest {
            attributes 'Built-By': System.getProperty('user.name')
            attributes 'Built-JDK': System.getProperty('java.version')
            attributes 'Built-OS': System.getProperty('os.name')
        }


    }




}

project('salient_editor'){

    dependencies {
        api project(":gdx-ui")
        api project(":gdx-yung-utils")
        api project(":gdx-scenegraph")
        api project(":gdx-mesh-plus")
        api project(":gdx-picking")
        api project(":gdx-gizmos")
        api project(":gdx-bmesh")
    }
}


//fatjar for all projects except the main named salient_editor
task fatjar(type: Jar) {
    dependsOn libs().jar
    from libs().jar

    manifest {
        attributes 'Packages' : libs().collect { it.group + '.' + it.name }.join('\n')
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

//farjar with sources
task fatjarWithSources(type: Jar) {
    dependsOn libs().sourcesJar
    from libs().sourcesJar
    manifest {
        attributes 'Main-Class': 'app.Launcher'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}



task copyFatJarWithSources(type: Copy) {
    from fatjarWithSources // here it automatically reads jar file produced from jar task
    into rootDir
}
task copyFatJar(type: Copy) {
    from fatjar // here it automatically reads jar file produced from jar task
    into rootDir.path+'/lib'
}
//build fatjar for all projects except the main named salient_editor



build.finalizedBy copyFatJar




